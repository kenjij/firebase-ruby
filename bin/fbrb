#!/usr/bin/env ruby
require 'firebase-ruby/trollop'
require 'firebase-ruby'
require 'json'


opts = Trollop::options do
  banner "fbrb [options] <URL>"
  opt :data, 'HTTP POST data', type: :string
  opt :id, 'Project ID', type: :string
  opt :key, 'JSON file with private key', type: :string
  opt :log, 'Log file', type: :string
  opt :path, 'Path', type: :string
  opt :request, 'Specify request command to use', type: :string, short: 'X', default: 'get'
  opt :ruby, 'Output Ruby format'
  opt :verbose, 'Verbose mode'
end

if opts[:log_given]
  Firebase.logger = Logger.new(opts[:log])
  Firebase.logger.level = Logger::WARN
end

if opts[:verbose]
  Firebase.logger = Logger.new(STDOUT) unless opts[:log_given]
  Firebase.logger.level = Logger::DEBUG
end
log = Firebase.logger

log.debug("Command line arguments: #{opts}")

path = opts[:path]
path ||= ARGV.shift

Trollop::die :path, "is missing" if path.nil?

db = Firebase::Database.new()
db.set_auth_with_key(path: opts[:key])

method = opts[:request].downcase.to_sym

case method
when :get, :delete
  data = db.public_send(method, path)
when :put, :patch, :post
  if opts[:data_given]
    data = db.public_send(method, path, opts[:data])
  else
    Trollop::die :data, "is missing"
  end
end

if data
  if opts[:ruby]
    puts data
  else
    json_opts = {indent: '  ', space: ' ', object_nl: "\n", array_nl: "\n"}
    puts JSON.fast_generate(data, json_opts)
  end
end
